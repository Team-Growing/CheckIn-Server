name: CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
 
permissions:
  contents: read
 
jobs:
  build:
 
    runs-on: ubuntu-latest
 
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Set yml file 
      uses: microsoft/variable-substitution@v1
      with:
        files: ./src/main/resources/application.yml
      env:
        spring.datasource.url: ${{ secrets.RDS_HOST }} 
        spring.datasource.username: ${{ secrets.DB_USER }} 
        spring.datasource.password: ${{ secrets.DB_PW }} 
        app.jwt.key: ${{ secrets.JWT_KEY }}
        app.admin.pw: ${{ secrets.SWAGGER_PW }}
    - name: Gradle Wrap
      run: gradle wrap
    - name: Build with Gradle
      run: ./gradlew bootJar
    - name: Build Docker Image For Spring
      run: |
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/checkin:latest .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/checkin:latest
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Docker Run
      run: |
          echo "$SSH_PEM_KEY" >> $HOME/checkIn-key.pem
          chmod 400 $HOME/checkIn-key.pem
          ssh -i $HOME/checkIn-key.pem -o StrictHostKeyChecking=no ${{ secrets.LINUX_USERNAME }}@${{ secrets.LINUX_HOST }}
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker stop checkIn
          docker rm checkIn
          docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/checkin:latest
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/checkin:latest
          docker run -d -p 8080:8080 --name checkIn ${{ secrets.DOCKERHUB_USERNAME }}/checkin:latest
      env:
          SSH_PEM_KEY: ${{secrets.SSH_PEM_KEY}}
          
      # uses: appleboy/ssh-action@v0.1.8
      # with:
      #   host: ${{ secrets.LINUX_HOST }}
      #   username: ${{ secrets.LINUX_USERNAME }}
      #   password: ${{ secrets.LINUX_PASSWORD }}
      #   port: ${{ secrets.LINUX_SSH_PORT }}
      #   script: |
      #     docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
      #     docker stop checkin
      #     docker rm checkin
      #     docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/checkin:latest
      #     docker pull ${{ secrets.DOCKERHUB_USERNAME }}/checkin:latest
      #     docker run -d -p 33333:8080 --name checkin ${{ secrets.DOCKERHUB_USERNAME }}/checkin:latest
